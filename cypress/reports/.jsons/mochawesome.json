{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-09-13T02:25:11.629Z",
    "end": "2025-09-13T02:25:13.779Z",
    "duration": 2150,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0f90526d-e7e1-48ab-9fb6-e557d554d8f4",
      "title": "",
      "fullFile": "cypress\\e2e\\spec.cy.js",
      "file": "cypress\\e2e\\spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "71497c55-1c5a-432e-8815-620369b4abb7",
          "title": "Open Charge Map API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET /poi - deve retornar pontos de interesse válidos",
              "fullTitle": "Open Charge Map API GET /poi - deve retornar pontos de interesse válidos",
              "timedOut": null,
              "duration": 1004,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'poi/',\n  qs: {\n    key: Cypress.env('CYPRESS_X_API_KEY'),\n    latitude: 37.415328,\n    longitude: -122.076575,\n    distance: 5,\n    maxresults: 5\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.duration).to.be.lessThan(EXPECTED_RESPONSE_TIME);\n  expect(response.body).to.be.an('array');\n  expect(response.body.length).to.be.greaterThan(0);\n  response.body.forEach(poi => {\n    expect(poi).to.have.property('AddressInfo');\n    expect(poi.AddressInfo).to.have.property('Latitude');\n    expect(poi.AddressInfo).to.have.property('Longitude');\n  });\n});",
              "err": {},
              "uuid": "7bb96866-482a-41bc-9fc9-2fc5abf6ebeb",
              "parentUUID": "71497c55-1c5a-432e-8815-620369b4abb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /referencedata - deve retornar dados de referência",
              "fullTitle": "Open Charge Map API GET /referencedata - deve retornar dados de referência",
              "timedOut": null,
              "duration": 1089,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'referencedata/',\n  qs: {\n    key: Cypress.env('CYPRESS_X_API_KEY')\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.duration).to.be.lessThan(EXPECTED_RESPONSE_TIME);\n  expect(response.body).to.be.an('object');\n  expect(response.body).to.have.property('ChargerTypes');\n  response.body.ChargerTypes.forEach(type => {\n    expect(type).to.have.property('Comments');\n    expect(type).to.have.property('IsFastChargeCapable');\n    expect(type).to.have.property('ID');\n    expect(type).to.have.property('Title');\n    expect(type.Comments).to.be.a('string');\n    expect(type.IsFastChargeCapable).to.be.a('boolean');\n    expect(type.ID).to.be.a('number');\n    expect(type.Title).to.be.a('string');\n  });\n  expect(response.body).to.have.property('ConnectionTypes');\n  expect(response.body).to.have.property('CurrentTypes');\n  expect(response.body).to.have.property('Countries');\n  expect(response.body).to.have.property('DataProviders');\n  expect(response.body).to.have.property('Operators');\n  expect(response.body).to.have.property('StatusTypes');\n  expect(response.body).to.have.property('SubmissionStatusTypes');\n  expect(response.body).to.have.property('UsageTypes');\n  expect(response.body).to.have.property('UserCommentTypes');\n  expect(response.body).to.have.property('CheckinStatusTypes');\n  expect(response.body).to.have.property('DataTypes');\n  expect(response.body).to.have.property('MetadataGroups');\n  expect(response.body).to.have.property('UserProfile');\n  expect(response.body).to.have.property('ChargePoint');\n  expect(response.body).to.have.property('UserComment');\n});",
              "err": {},
              "uuid": "906d9843-942e-4964-83ff-3710dd4996d9",
              "parentUUID": "71497c55-1c5a-432e-8815-620369b4abb7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7bb96866-482a-41bc-9fc9-2fc5abf6ebeb",
            "906d9843-942e-4964-83ff-3710dd4996d9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2093,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\reports\\.jsons",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}